[tool.ruff]

# Для подсвечивания ошибок: дополнительные (экспериментальные или недавно добавленные) правила линтинга.
preview = true

# Исключенные директории и файлы
exclude = [
    ".direnv",
    ".git",
    ".github",
    ".git-rewrite",
    ".mypy_cache",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "migrations",
    "site-packages",
    "static",
    "venv",
]

line-length = 79
target-version = "py312"

[tool.ruff.lint]
select = [
    # "A",  # - flake8-builtins - Проверяет перекрытие встроенных имен Python
    # "ARG",  # - flake8-arguments — Обнаруживает неиспользуемые аргументы
    # "B",  # - flake8-bugbear - Находит потенциальные ошибки и проблемы дизайна
    # "C4",  # - flake8-comprehensions - Обеспечивает лучшие практики для списковых включений
    # "D",  # - pydocstyle — Обеспечивает проверку стиля docstring
    # "DJ",  # - flake8-django - Проверки, специфичные для Django
    # "DTZ",  # - flake8-datetimez — Выявляет ошибки при работе с датой и временем
    "E",  # - pycodestyle errors - Проверяет синтаксические ошибки и стиль кода
    # "EM",  # - flake8-errmsg — Обеспечивает правильное форматирование сообщений об ошибках
    "F",  # - Pyflakes - Проверяет логические ошибки, такие как неиспользуемые импорты
    # "G",  # - flake8-logging-format — Проверяет корректность форматирования логов
    "I",  # - isort - Сортировка импортов
    # "INP",  # - flake8-no-pep420 - Проверяет наличие __init__.py в пакетах
    # "N",  # - pep8-naming — Обеспечивает соблюдение соглашений об именовании
    # "PIE",  # - flake8-pie — Обеспечивает выявление потенциальных ошибок и улучшений
    # "PTH",  # - flake8-use-pathlib — Обеспечивает поощрение использования pathlib вместо os.path
    # "RET",  # - flake8-return — Проверяет возвращаемые значения
    # "RUF",  # - Собственные правила Ruff
    # "S",  # - flake8-bandit - Проверки безопасности
    # "SIM",  # - flake8-simplify - Проверяет наличие избыточных или сложных конструкций
    # "T10",  # - flake8-print — Обеспечивает запрет на использование print в продакшн-коде
    # "TC",  # - flake8-type-checking — Обеспечивает оптимизацию импорта для аннотаций типов
    # "TID",  # - flake8-tidy-imports - Проверяет аккуратность импортов
    # "TRY",  # - tryceratops — Обеспечивает улучшение обработки исключений
    # "UP",  # - pyupgrade - Обновляет синтаксис до новых версий Python
    "Q",  # - flake8-quotes — Обеспечивает соблюдение единообразия в использовании кавычек
]

# Игнорируемые правила
ignore = []

# Только гарантированно безопасные правила для автофикса
fixable = [
    "E",  # Синтаксические ошибки и стиль кода - безопасно
    "F",  # Pyflakes - большинство автофиксов безопасны
    "I",  # Сортировка импортов - безопасно
    "Q",  # Кавычки - безопасно
]

# Правила, которые не подлежат автоматическому исправлению
unfixable = []


# Регулярное выражение для определения неиспользуемых переменных
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

# Настройки для конкретных файлов
[tool.ruff.lint.per-file-ignores]
"**/settings.py" = ["E501"]  # Игнорировать ошибки длины строки для файлов settings.py
"backend/tests/**" = ["E501"]  # Игнорировать ошибки длины строки для всех файлов в папке tests

# Настройки сложности кода
[tool.ruff.lint.mccabe]
max-complexity = 10

# Настройки документации
[tool.ruff.lint.pydocstyle]
convention = "google"  # Используем Google стиль для документации

# Настройки кавычек
[tool.ruff.lint.flake8-quotes]
inline-quotes = "single"        # Одинарные кавычки для обычных строк
docstring-quotes = "double"     # Двойные кавычки для докстрингов
multiline-quotes = "double"     # Двойные кавычки для многострочных строк
avoid-escape = true             # Избегать экранирования, меняя тип кавычек

# Настройки форматтера
[tool.ruff.format]
quote-style = "single"  # Одинарные кавычки для строк
indent-style = "space"  # Использовать пробелы для отступов
skip-magic-trailing-comma = false  # Не пропускать автоматическое добавление запятых
docstring-code-format = true  # Форматировать код в docstrings
docstring-code-line-length = 79  # Ширина строки для кода в docstrings
