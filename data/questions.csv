name,description,syntax,tags
int," Функция преобразует переданное значение в целое число. Если аргумент является числом с плавающей запятой, дробная часть отбрасывается. При передаче строки требуется, чтобы она содержала корректное числовое представление. Если аргументы отсутствуют, возвращается значение 0."," int([x], base=10) -> int 
 - x (необязательный) — значение, которое нужно преобразовать в целое число. 
 - base (необязательный) — основание системы счисления (по умолчанию 10). ",Функции
float,"Функция преобразует аргумент в число с плавающей запятой. Если аргумент не указан, возвращается значение 0.0. При передаче строки она должна содержать корректное представление числа. Поддерживаются числа в экспоненциальной форме.","float([x]) -> float 
 - x (необязательный) — значение, которое нужно преобразовать в число с плавающей запятой. ",Функции
max,"Возвращает наибольшее значение из переданных аргументов. Если аргументы не переданы, то можно указать итерируемый объект, содержащий сравниваемые значения. Может принимать функцию сравнения.","max(iterable, *[, key, default]) -> value 
 - iterable (обязательный) — итерируемый объект. 
 - key (необязательный) — функция, задающая правило сравнения. 
 - default — возвращаемое значение, если итерируемый объект пуст.",Функции
min,Возвращает наименьшее значение из переданных аргументов. Функция поддерживает работу с итерируемыми объектами. Можно передать ключевую функцию для указания правил сравнения.,"min(iterable, *[, key, default]) -> value 
 - iterable (обязательный) — итерируемый объект. 
 - key (необязательный) — функция для определения правила сравнения. 
 - default — значение для пустого итерируемого объекта.",Функции
abs,"Возвращает модуль числа, то есть его абсолютное значение. Функция работает как с целыми числами, так и с числами с плавающей запятой. Если передать комплексное число, возвращается его модуль.","abs(x) -> number 
 - x (обязательный) — число, модуль которого требуется найти. 
 Возвращает абсолютное значение числа.
",Функции
len,"Определяет количество элементов в итерируемом объекте, таком как строка, список или словарь. Подходит для работы с коллекциями. Для пустых объектов возвращает 0.","len(s) -> int 
 - s (обязательный) — итерируемый объект.  
Возвращает количество элементов в объекте.
",Функции
str,"Преобразует переданное значение в строку. Если аргумент отсутствует, возвращается пустая строка. Поддерживает работу с различными типами данных, включая числа и объекты с методами __str__ или __repr__.","str(object='', encoding='utf-8', errors='strict') -> str 
 - object (необязательный) — значение, преобразуемое в строку. 
 - encoding (необязательный) — кодировка для байтов. ",Функции
capitalize,"Преобразует первую букву строки в верхний регистр, а все остальные делает строчными. Работает только с текстовыми данными. Если строка пустая, метод возвращает её неизменной.","str.capitalize() -> str 
 Применяется к строке. 
 Возвращает строку с первой заглавной буквой.
",Функции
swapcase,"Меняет регистр всех символов в строке на противоположный. Буквы верхнего регистра становятся строчными, и наоборот. Может быть полезен при форматировании текстов.","str.swapcase() -> str 
 Применяется к строке. 
 Возвращает новую строку с изменённым регистром символов.
",Функции
title,"Преобразует каждое слово строки так, чтобы его первая буква была заглавной, а остальные строчными. Работает с разделителями между словами, включая пробелы и знаки пунктуации.","str.title() -> str  
Применяется к строке. 
Возвращает строку с заглавными буквами в начале каждого слова.
",Функции
lower,"Преобразует все символы строки в нижний регистр. Метод не изменяет исходную строку, а возвращает новую. Работает только с текстовыми данными. Символы, не имеющие регистра, остаются неизменными.","str.lower() -> str 
 Применяется к строке. 
 Возвращает новую строку, где все символы приведены к нижнему регистру.",Функции
upper,"Преобразует все символы строки в верхний регистр. Метод создаёт новую строку, не изменяя исходную. Подходит для форматирования текстов или создания заглавных версий строк.","str.upper() -> str 
 Применяется к строке. 
 Возвращает новую строку, где все символы приведены к верхнему регистру.",Функции
count,"Считает количество вхождений подстроки в строку. Метод позволяет указать начальный и конечный индексы диапазона поиска. Если подстрока не найдена, возвращается 0.  
Подсчитывает количество вхождений указанного элемента в список. Метод возвращает 0, если элемент не найден.","str.count(sub[, start[, end]]) -> int 
 - sub (обязательный) — подстрока, количество вхождений которой нужно посчитать. 
 - start (необязательный) — начальный индекс поиска. 
 - end — конечный индекс поиска.  
 list.count(item) -> int  
- item (обязательный) — элемент, количество вхождений которого нужно посчитать. 
 Возвращает количество вхождений.",Функции
startswith,"Проверяет, начинается ли строка с указанной подстроки. Можно задать диапазон проверки с помощью индексов. Возвращает логическое значение: True, если условие выполняется, и False — в противном случае.","str.startswith(prefix[, start[, end]]) -> bool 
 - prefix (обязательный) — подстрока или кортеж подстрок для проверки. 
 - start (необязательный) — начальный индекс проверки. 
 - end — конечный индекс проверки.",Функции
endswith,"Проверяет, заканчивается ли строка указанной подстрокой. Также позволяет указать начальный и конечный индексы диапазона проверки. Возвращает True или False в зависимости от результата проверки.","str.endswith(suffix[, start[, end]]) -> bool 
 - suffix (обязательный) — подстрока или кортеж подстрок для проверки. 
 - start (необязательный) — начальный индекс проверки. 
 - end — конечный индекс проверки.",Функции
